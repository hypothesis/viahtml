[pytest]
filterwarnings =
    error
    ; Suppress warnings about an import of `imp` by Pyramid
    ignore:the imp module is deprecated in favour of importlib
    ; Annoying errors raised in pywb.rewrite.cookie_rewriter
    ignore:invalid escape sequence
    ; Mostly from importing pywb.apps.frontendapp.FrontEndApp
    ignore:Monkey-patching ssl after ssl has already been imported may lead to errors.*:gevent.monkey.MonkeyPatchWarning:

xfail_strict=true

[tox]
envlist = tests
skipsdist = true
minversion = 3.16.1
requires =
    tox-pip-extensions
    tox-pyenv
    tox-run-command
    tox-envfile
tox_pip_extensions_ext_venv_update = true
tox_pyenv_fallback = false

[testenv]
skip_install = true
setenv =
    PYTHONUNBUFFERED = 1
    dev: NEW_RELIC_APP_NAME = {env:NEW_RELIC_APP_NAME:viahtml}
    dev: NEW_RELIC_ENVIRONMENT = {env:NEW_RELIC_ENVIRONMENT:dev}
    dev: SENTRY_ENVIRONMENT = {env:SENTRY_ENVIRONMENT:dev}
    dev: CHECKMATE_URL = http://localhost:9099
    dev: CHECKMATE_API_KEY = dev_api_key
    dev: CHECKMATE_IGNORE_REASONS = {env:CHECKMATE_IGNORE_REASONS:publisher-blocked}
    dev: VIA_BLOCKLIST_PATH = conf/blocklist-dev.txt
    dev: VIA_SECRET = not_a_secret
    dev: VIA_DISABLE_AUTHENTICATION = 0
    dev: VIA_DISABLE_COOKIE = 1
    dev: VIA_HTTP_MODE = 1
    dev: NEW_RELIC_APP_NAME = viahtml
    OBJC_DISABLE_INITIALIZE_FORK_SAFETY = YES
passenv =
    HOME
    dev: VIA_BLOCKLIST_URL
    dev: VIA_BLOCKLIST_PATH
    dev: CHROME_EXTENSION_ID
    dev: SENTRY_DSN
    dev: NEW_RELIC_LICENSE_KEY
    dev: NGINX_SERVER
    dev: CLIENT_EMBED_URL
    dev: LEGACY_VIA_URL
    dev: NEW_RELIC_LICENSE_KEY
deps =
    dev: -e .
    dev: -r requirements/dev.txt
    tests: -r requirements/tests.txt
    lint: -r requirements/lint.txt
    {format,checkformatting}: -r requirements/format.txt
    build: -r requirements/build.txt
    pip-tools<5
whitelist_externals =
    dev: gunicorn
    dev: newrelic-admin
    update-pdfjs: sh
commands =
    dev: {posargs:supervisord -c conf/supervisord-dev.conf}
    lint: pydocstyle --explain viahtml
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pydocstyle --explain viahtml
    lint: pydocstyle --config tests/.pydocstyle --explain tests
    lint: pylint {posargs:viahtml bin}
    lint: pylint --rcfile=tests/.pylintrc tests
    format: black viahtml tests bin
    format: isort --quiet --atomic viahtml tests bin
    checkformatting: black --check viahtml tests bin
    checkformatting: isort --quiet --check-only viahtml tests bin
    tests: coverage run -m pytest {posargs:tests/}
    tests: -coverage combine
    tests: coverage report
    pip-compile: pip-compile {posargs}
    build: python bin/build_static.py
    build: python -m whitenoise.compress --no-brotli static


[testenv:dev]
# By default when you Ctrl-c the `make dev` command tox is too aggressive about
# killing supervisor. tox kills supervisor before supervisor has had time to
# stop or kill its child processes, resulting in detached child processes being
# left running and other problems.
#
# Fix this by configuring tox to wait a long time before sending any further
# SIGINTs (after the first one) or SIGTERMs or SIGKILLs to supervisor.
# Just trust supervisor to clean up all its child processes and stop.
suicide_timeout = 60.0
interrupt_timeout = 60.0
terminate_timeout = 60.0
